{"version":3,"sources":["../../src/pages/email-login/email-login.module.ts","../../src/validator/profile.ts","../../src/pages/email-login/email-login.ts","../../src/validator/emailValid.ts"],"names":[],"mappings":"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","file":"38.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EmailLoginPage } from './email-login';\nimport { SharedModule } from '../../app/shared.module';\n\n\n@NgModule({\n  declarations: [\n    EmailLoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(EmailLoginPage),\n    SharedModule\n  ],\n})\nexport class EmailLoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/email-login/email-login.module.ts","import { FormControl } from '@angular/forms';\n\nexport function validateName(c: FormControl) {\nlet name_pattern = \"[a-zA-Z][a-zA-Z ]+\";\nreturn name_pattern.concat(c.value) ? null : {\n    validateName: {\n    valid: false\n    }\n    };         \n}\n\nexport function noWhitespaceValidator(control: FormControl) {\n    if(control.value){\n        let isWhitespace = (control.value || '').trim().length === 0;\n        // console.log((control.value || '').trim().length);\n        // console.log(isWhitespace, \"is white space\");\n        let isValid = !isWhitespace;\n        return isValid ? null : { 'whitespace': true }\n    }else{\n        return {'whitespace':false}\n    }\n   \n}\n\nexport function onlyNumbers(control: FormControl) {\n    if (control.value) {\n        let isValid = (/^[0-9]+$/).test(control.value);\n        return isValid ? null : { 'onlynumber': true };\n    } \n    else{\n        return {'onlynumber':false}\n    }\n    \n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/validator/profile.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, MenuController } from 'ionic-angular';\nimport { AuthProvider } from '../../providers/auth/auth';\nimport { ExceptionHandlerProvider } from '../../providers/exception-handler/exception-handler';\nimport { FormBuilder, FormControl, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { EMAIL_REGEXP } from '../../validator/emailValid';\nimport { noWhitespaceValidator } from '../../validator/profile';\nimport { AnalyticsProvider } from '../../providers/analytics/analytics';\nimport { TranslateService } from '@ngx-translate/core';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-email-login',\n  templateUrl: 'email-login.html',\n})\n\nexport class EmailLoginPage {\n  emailLoginForm: FormGroup;\n  email: AbstractControl;\n  _social_user_id: string;\n  _social_channel: string;\n  _isSocialChannelPresent: boolean;\n  _useremail = null;\n\n  constructor(\n    private navParams: NavParams,\n    private navCtrl: NavController,\n    private formBuilder: FormBuilder,\n    private authProvider: AuthProvider,\n    private menuController: MenuController,\n    private excepProvider: ExceptionHandlerProvider,\n    private analytics: AnalyticsProvider, private translate:TranslateService) {\n\n    this.emailLoginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(EMAIL_REGEXP), noWhitespaceValidator])]\n    });\n    this.email = this.emailLoginForm.controls['email'];\n    //get email from facebook\n    this._useremail = this.navParams.get('useremail');\n    this._social_user_id = this.navParams.get('social_user_id');\n    this._social_channel = this.navParams.get('social_channel');\n    this._isSocialChannelPresent = this.navParams.get('isSocialChannelPresent');\n    this.analytics.fa.logEvent('EmailLoginPage');\n  }\n\n  ionViewWillEnter() {\n    this.menuController.swipeEnable(false);\n    if (this.menuController.isOpen())\n      this.menuController.close();\n  }\n\n  // verifying email function: on success call send Otp and redirect to otp page\n  verifyEmail() {\n   \n    this.authProvider.verifyEmail(this.emailLoginForm.value).subscribe(res => {\n      console.log(res,\"ressss\")\n      this.authProvider.sendOTP(this.emailLoginForm.value).subscribe(result => {\n        if (result[0].code == 200) {\n          if (this._social_user_id && this._social_channel && this._isSocialChannelPresent === false) {\n            this.navCtrl.push(\"OtpPage\", { email: this.emailLoginForm.value.email, isregistered: res[0].code == 200 ? true : false, social_user_id: this._social_user_id, social_channel: this._social_channel, isSocialChannelPresent: this._isSocialChannelPresent });\n          }\n          else\n            this.navCtrl.push(\"OtpPage\", { email: this.emailLoginForm.value.email, isregistered: res[0].code == 200 ? true : false });\n        }\n      }, err =>  this.excepProvider.excpHandler(err));\n    }, err => this.excepProvider.excpHandler(err));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/email-login/email-login.ts","import { AbstractControl, ValidatorFn} from '@angular/forms';\n//import { Validator } from '@angular/forms/src/directives/validators';\n\n// export function validateEmail(c: FormControl) {\n\n// export const EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/;\n\nexport const EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n// export const MOBILE_REGEXP = '^\\d{4}-\\d{3}-\\d{4}$';\n// return EMAIL_REGEXP.test(c.value) ? null : {\n// validateEmail: {\n// valid: false\n// }\n// };\n// }\n\nexport function equalto(field_name): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} => {\n    \n    let input = control.value;\n    \n    let isValid=control.root.value[field_name]==input\n    if(!isValid)\n    return { 'equalTo': {isValid} }\n    else\n    return null;\n    };\n}\n    \n\n\n\n// WEBPACK FOOTER //\n// ./src/validator/emailValid.ts"],"sourceRoot":""}